import Head from "next/head";

import Layout from "@components/Layout";
import Header from "@components/Header";
import Container from "@components/Container";
import Button from "@components/Button";
import { ApolloClient, InMemoryCache, gql } from "@apollo/client";
import styles from "@styles/Product.module.scss";

export default function Product({ product }) {
  const { name, price, image, description } = product;
  return (
    <Layout>
      <Head>
        <title>Product Name</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <Container>
        <div className={styles.productWrapper}>
          <div className={styles.productImage}>
            <img src={image.url} alt="" />
          </div>
          <div className={styles.productContent}>
            <h1>{name}</h1>
            <div className={styles.productDescription}>
              <p>{description}</p>
            </div>
            <p className={styles.productPrice}>${price}</p>
            <p className={styles.productBuy}>
              <Button>Add to Cart</Button>
            </p>
          </div>
        </div>
      </Container>
    </Layout>
  );
}

export async function getStaticProps({ params }) {
  const client = new ApolloClient({
    uri: "https://api-ca-central-1.hygraph.com/v2/cllihvusa17bv01uf623t4rwa/master",
    cache: new InMemoryCache(),
  });

  const { data } = await client.query({
    query: gql`
      query PageProduct($slug: String) {
        product(where: { slug: $slug }) {
          id
          name
          price
          image {
            url
          }
          description {
            html
          }
        }
      }
    `,
    variables: {
      slug: params.productSlug,
    },
  });
  const product = data.product;
  return {
    props: {
      product,
    },
  };
}
export async function getStaticPaths() {
  const client = new ApolloClient({
    uri: "https://api-ca-central-1.hygraph.com/v2/cllihvusa17bv01uf623t4rwa/master",
    cache: new InMemoryCache(),
  });

  const { data } = await client.query({
    query: gql`
      query PageProduct {
        products {
          name
          price
          slug
          image {
            height
            width
            url
          }
        }
      }
    `,
  });
  const paths = data.products.map((product) => {
    return {
      params: {
        productSlug: product.slug,
      },
    };
  });

  return {
    paths,
    fallback: false,
  };
}
